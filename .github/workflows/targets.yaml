# MIT License
# Copyright (c) 2021 Eli Lilly and Company
# Author: William Michael Landau (will.landau at gmail)
# Written with help from public domain (CC0 1.0 Universal) workflow files by Jim Hester:
# * https://github.com/r-lib/actions/blob/master/examples/check-full.yaml
# * https://github.com/r-lib/actions/blob/master/examples/blogdown.yaml
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Ejecuto el Proyecto GISTAQ-SAMEEP
run-name: ${{ github.actor }} est치 ejecutando snakemake 游냀
on: [push]
  # schedule:
  # - cron: '0 23 * * *'

jobs:
  Ejecuto-Proyecto-GISTAQ-SAMEEP-2024:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      S2MSI_USERNAME: ${{ secrets.S2MSI_USERNAME }}
      S2MSI_PASSWORD: ${{ secrets.S2MSI_PASSWORD }}
    steps:
      - run: echo "游꿀 Tareas activadas autom치ticamente debido a un evento ${{ github.event_name }}"
      - run: echo "游냖 Las tareas est치n corriendo en un servidor ${{ runner.os }} alojado en GitHub"
      - run: echo "游댍 El nombre del branch es ${{ github.ref }} y su repositorio es ${{ github.repository }}"
      - name: Verificar el c칩digo del repositorio
        uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: turb
          environment-file: environment.yml
          auto-activate-base: false
          
      # - name: Restore packages
      #   shell: Rscript {0}
      #   run: |
      #     if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
      #     renv::restore()
      # 
      # - name: Check if previous runs exists
      #   id: runs-exist
      #   run: git ls-remote --exit-code --heads origin targets-runs
      #   continue-on-error: true
      # 
      # - name: Checkout previous run
      #   if: steps.runs-exist.outcome == 'success'
      #   uses: actions/checkout@v2
      #   with:
      #     ref: targets-runs
      #     fetch-depth: 1
      #     path: .targets-runs
      # 
      # - name: Restore output files from the previous run
      #   if: steps.runs-exist.outcome == 'success'
      #   run: |
      #     for (dest in scan(".targets-runs/.targets-files", what = character())) {
      #       source <- file.path(".targets-runs", dest)
      #       if (!file.exists(dirname(dest))) dir.create(dirname(dest), recursive = TRUE)
      #       if (file.exists(source)) file.rename(source, dest)
      #     }
      #   shell: Rscript {0}

      - name: Run targets pipeline
        run: targets::tar_make()
        shell: Rscript {0}

      - name: Configuro git en el runner
        run: |
          git config --local user.email "noreply@github.com"
          git config --local user.name "GitHub"
      - name: Commit de los cambios en el repositorio
        run: |
          git add .
          git commit --allow-empty -m "Producto procesado e imagen creada"
          git push origin main
      - run: echo "游꼞 El estado final es = ${{ job.status }}."

